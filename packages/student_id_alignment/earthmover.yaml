version: 2

config:
  # show_stacktrace: True
  # log_level: DEBUG
  parameter_defaults:
    POSSIBLE_STUDENT_ID_COLUMNS: School_StateID,StudentID,Student_StateID # probably should remove this and leave it to each assessment bundle to define a default?
    EDFI_STUDENT_ID_TYPES: Local,District,State

sources:
  input_file:
    # THIS FILE DOES NOT EXIST; IT MUST BE SUPPLIED BY THE USER!
    file: ${INPUT_FILE}
    header_rows: 1
  edfi_student_ids:
    file: "" # user must supply this when using this package!

transformations:
  
  num_input_rows:
    source: $sources.input_file
    operations:
      - operation: add_columns
        columns:
          __join_id: "1"
      - operation: group_by
        group_by_columns:
          - __join_id
        create_columns:
          num_rows: count()
  unpacked_edfi_student_ids:
    source: $sources.edfi_student_ids
    operations:
      - operation: add_columns
        columns:
          edOrgId: '{%raw%}{{educationOrganizationReference.educationOrganizationId}}{%endraw%}'
          edOrgType: '{%raw%}{{educationOrganizationReference.link.rel}}{%endraw%}'
          studentUniqueId: '{%raw%}{{studentReference.studentUniqueId}}{%endraw%}'
          # TODO: could maybe use a flatten operation for this?
          {% for id_code in "${EDFI_STUDENT_ID_TYPES}".split(",") %}
          {{id_code}}: '{%raw%}{{(studentIdentificationCodes|selectattr("assigningOrganizationIdentificationCode","eq","{%endraw%}{{id_code}}{%raw%}")|first or {"identificationCode":""}).identificationCode}}{%endraw%}'
          {% endfor %}
      - operation: keep_columns
        columns:
          - edOrgId
          - edOrgType
          - studentUniqueId
          {% for id_code in "${EDFI_STUDENT_ID_TYPES}".split(",") %}
          - {{id_code}}
          {% endfor %}
  {% for source_student_id_column in "${POSSIBLE_STUDENT_ID_COLUMNS}".split(",") -%}
  {% for edfi_student_id_column in "${EDFI_STUDENT_ID_TYPES}".split(",") -%}
  {{source_student_id_column}}_{{edfi_student_id_column}}_join:
    source: $sources.input_file
    operations:
      - operation: join
        sources:
          - $transformations.unpacked_edfi_student_ids
        join_type: inner
        left_key: {{source_student_id_column}}
        right_key: {{edfi_student_id_column}}
      - operation: rename_columns
        columns:
          {{source_student_id_column}}: value
      - operation: keep_columns
        columns:
          - value
          - studentUniqueId
      - operation: add_columns
        columns:
          source_column_name: {{source_student_id_column}}
          edfi_column_name: {{edfi_student_id_column}}
  {% endfor %}
  {% endfor %}

  stacked_joins:
    source: $transformations.{{"${POSSIBLE_STUDENT_ID_COLUMNS}".split(",")[0]}}_{{"${EDFI_STUDENT_ID_TYPES}".split(",")[0]}}_join
    operations:
      - operation: union
        sources:
          {% for source_student_id_column in "${POSSIBLE_STUDENT_ID_COLUMNS}".split(",") -%}
          {% for edfi_student_id_column in "${EDFI_STUDENT_ID_TYPES}".split(",") -%}
          {# Avoid adding two copies of the first combination: #}
          {% if source_student_id_column!="${POSSIBLE_STUDENT_ID_COLUMNS}".split(",")[0] or edfi_student_id_column!="${EDFI_STUDENT_ID_TYPES}".split(",")[0] %}
          - $transformations.{{source_student_id_column}}_{{edfi_student_id_column}}_join
          {% endif %}
          {% endfor %}
          {% endfor %}
  id_match_rates:
    source: $transformations.stacked_joins
    operations:
      - operation: drop_columns
        columns:
          - studentUniqueId
      - operation: group_by
        group_by_columns:
          - source_column_name
          - edfi_column_name
        create_columns:
          num_matches: count()
      # this is (unfortunately) needed to prevent a type bug with sorting ints
      - operation: modify_columns
        columns:
          num_matches: "{%raw%}{{value|string}}{%endraw%}"
      - operation: sort_rows
        columns:
          - num_matches
        descending: True
      - operation: add_columns
        columns:
          __join_id: "1"
      - operation: join
        sources:
          - $transformations.num_input_rows
        join_type: inner
        left_key: __join_id
        right_key: __join_id
      - operation: add_columns
        columns:
          match_rate: "{%raw%}{{num_matches|float / num_rows|float}}{%endraw%}"
      - operation: modify_columns
        columns:
          num_matches: "{%raw%}{{value|int}}{%endraw%}"
      - operation: drop_columns
        columns:
          - __join_id
  best_id_match:
    source: $transformations.id_match_rates
    operations:
      - operation: add_columns
        columns:
          meets_filter_criteria: '{%raw%}{%if match_rate|float > 0.5%}Yes{%else%}No{%endif%}{%endraw%}'
      - operation: filter_rows
        query:  'meets_filter_criteria=="Yes"'
        behavior: include
      - operation: drop_columns
        columns:
          - meets_filter_criteria
      # this should (hopefully) result in zero or one rows
  student_id_xwalk:
    source: $transformations.stacked_joins
    operations:
      - operation: join
        sources:
          - $transformations.best_id_match
        join_type: inner
        left_keys:
          - source_column_name
          - edfi_column_name
        right_keys:
          - source_column_name
          - edfi_column_name
      - operation: keep_columns
        columns:
          - value
          - studentUniqueId
      - operation: rename_columns
        columns:
          value: from
          studentUniqueId: to
  student_id_xwalk_for_join:
    source: $transformations.student_id_xwalk
    operations:
      - operation: rename_columns
        columns:
          from: __from
          to: __to
  best_id_match_for_join:
    source: $transformations.best_id_match
    operations:
      - operation: rename_columns
        columns:
          # this tries to ensure that the columns we're adding don't collide with real columns from INPUT_FILE
          # (since we will materialize those rows from INPUT_FILE where no student ID matches the xwalk we created)
          source_column_name: __source_column_name
          edfi_column_name: __edfi_column_name
          num_matches: __num_matches
          num_rows: __num_rows
          match_rate: __match_rate
      - operation: add_columns
        columns:
          __join_id: "1"
  input_no_student_id_match:
    source: $sources.input_file
    operations:
      - operation: add_columns
        columns:
          __join_id: "1"
      - operation: join
        sources:
          - $transformations.best_id_match_for_join
        join_type: inner
        left_key: __join_id
        right_key: __join_id
      - operation: drop_columns
        columns:
          - __join_id
      - operation: add_columns
        columns:
          __id_to_xwalk: '{%raw%}{{__row_data__[__source_column_name]|string}}{%endraw%}'
      - operation: join
        sources:
          - $transformations.student_id_xwalk_for_join
        join_type: left
        left_key: __id_to_xwalk
        right_key: __from
      # filter out rows where `to` is null:
      - operation: filter_rows
        query:  '__to.isnull()'
        behavior: include
      - operation: drop_columns
        columns:
          - __to
          - __id_to_xwalk
          - __source_column_name
          - __edfi_column_name
          - __num_matches
          - __num_rows
          - __match_rate

destinations:
  id_match_rates:
    source: $transformations.id_match_rates
    template: ./verbatim.csvt
    header: |
      source_column_name,edfi_column_name,num_matches,num_rows,match_rate

    extension: csv
    linearize: True
  student_id_xwalk:
    source: $transformations.student_id_xwalk
    template: ./verbatim.csvt
    header: |
      from,to

    extension: csv
    linearize: True
  input_no_student_id_match:
    source: $transformations.input_no_student_id_match
    # here we are assuming that INPUT_FILE is a CSV, but that might not be true... maybe
    # need to switch destination template and extension based on IPUT_FILE type?
    template: ./verbatim.csvt
    extension: csv
    linearize: True