version: 2

packages:
  # this provides `$sources.edfi_roster`, which this package requires
  edfi_roster:
    git: https://github.com/edanalytics/earthmover_edfi_bundles.git
    subdirectory: packages/student_ids/edfi_roster
    branch: student_id_alignment

config:
  # show_stacktrace: True
  # log_level: DEBUG
  parameter_defaults:
    POSSIBLE_STUDENT_ID_COLUMNS: School_StateID,StudentID,Student_StateID # probably should remove this and leave it to each assessment bundle to define a default?
    EARTHMOVER_NODE_TO_XWALK: $sources.input


transformations:
  
  num_input_rows:
    source: ${EARTHMOVER_NODE_TO_XWALK}
    operations:
      - operation: add_columns
        columns:
          __join_id: "1"
      - operation: group_by
        group_by_columns:
          - __join_id
        create_columns:
          num_rows: count()
  {% for source_student_id_column in "${POSSIBLE_STUDENT_ID_COLUMNS}".split(",") -%}
  {% for edfi_student_id_column in "${EDFI_STUDENT_ID_TYPES}".split(",") -%}
  {{source_student_id_column}}_{{edfi_student_id_column}}_join:
    source: ${EARTHMOVER_NODE_TO_XWALK}
    operations:
      - operation: join
        sources:
          - $transformations.unpacked_edfi_roster # from the `edfi_roster` package
        join_type: inner
        left_key: {{source_student_id_column}}
        right_key: {{edfi_student_id_column}}
      - operation: rename_columns
        columns:
          {{source_student_id_column}}: value
      - operation: keep_columns
        columns:
          - value
          - studentUniqueId
      - operation: add_columns
        columns:
          source_column_name: {{source_student_id_column}}
          edfi_column_name: {{edfi_student_id_column}}
  {% endfor %}
  {% endfor %}

  stacked_joins:
    source: $transformations.{{"${POSSIBLE_STUDENT_ID_COLUMNS}".split(",")[0]}}_{{"${EDFI_STUDENT_ID_TYPES}".split(",")[0]}}_join
    operations:
      - operation: union
        sources:
          {% for source_student_id_column in "${POSSIBLE_STUDENT_ID_COLUMNS}".split(",") -%}
          {% for edfi_student_id_column in "${EDFI_STUDENT_ID_TYPES}".split(",") -%}
          {# Avoid adding two copies of the first combination: #}
          {% if source_student_id_column!="${POSSIBLE_STUDENT_ID_COLUMNS}".split(",")[0] or edfi_student_id_column!="${EDFI_STUDENT_ID_TYPES}".split(",")[0] %}
          - $transformations.{{source_student_id_column}}_{{edfi_student_id_column}}_join
          {% endif %}
          {% endfor %}
          {% endfor %}
  id_match_rates:
    source: $transformations.stacked_joins
    operations:
      - operation: drop_columns
        columns:
          - studentUniqueId
      - operation: group_by
        group_by_columns:
          - source_column_name
          - edfi_column_name
        create_columns:
          num_matches: count()
      # this is (unfortunately) needed to prevent a type bug with sorting ints
      - operation: modify_columns
        columns:
          num_matches: "{%raw%}{{value|string}}{%endraw%}"
      - operation: sort_rows
        columns:
          - num_matches
        descending: True
      - operation: add_columns
        columns:
          __join_id: "1"
      - operation: join
        sources:
          - $transformations.num_input_rows
        join_type: inner
        left_key: __join_id
        right_key: __join_id
      - operation: add_columns
        columns:
          match_rate: "{%raw%}{{num_matches|float / num_rows|float}}{%endraw%}"
      - operation: modify_columns
        columns:
          num_matches: "{%raw%}{{value|int}}{%endraw%}"
      - operation: drop_columns
        columns:
          - __join_id

destinations:
  student_id_match_rates:
    source: $transformations.id_match_rates
    template: ./verbatim.csvt
    header: |
      source_column_name,edfi_column_name,num_matches,num_rows,match_rate

    extension: csv
    linearize: True