version: 2
config:
  log_level: INFO
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_graph: false
  show_stacktrace: true
  parameter_defaults:
    # You can set these values at the command line or leave the defaults
    OUTPUT_DIR: ./output/
    STATE_FILE: ./tmp/.earthmover/runs.csv
    API_YEAR: ''
    STUDENT_ID_NAME: 'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature
    POSSIBLE_STUDENT_ID_COLUMNS: StateID,PermID
    DESCRIPTOR_NAMESPACE_OVERRIDE: uri://ed-fi.org

sources:

  input:
    file: ${INPUT_FILE}
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  assessmentCategoryDescriptors:
    file: ./seeds/assessmentCategoryDescriptors.csv
    header_rows: 1
  assessments:
    file: ./seeds/assessments.csv
    header_rows: 1
  objectiveAssessments:
    file: ./seeds/objectiveAssessments.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1
  gradeLevelDescriptors:
    file: ./seeds/gradeMapping.csv
    header_rows: 1
  accommodationDescriptors:
    file: ./seeds/accommodationDescriptors.csv
    header_rows: 1
  assessmentPeriodDescriptors:
    file: ./seeds/assessmentPeriodDescriptors.csv
    header_rows: 1
  assessmentPlatformTypeDescriptors:
    file: ./seeds/assessmentPlatformTypeDescriptors.csv
    header_rows: 1

transformations:
  input:
      source: $sources.input
      operations: []       
      
  # modify input for basic mappings
  cleaned_input:
    source: $transformations.input
    operations:
      - operation: modify_columns
        columns:
          SciGrade: "{%raw%}{{ SciGrade | int }}{%endraw%}"
          SocGrade: "{%raw%}{{ SocGrade | int }}{%endraw%}"
          #TestAdmin: "{%raw%}{{ (TestAdmin | default('', true) | trim)[:2] }}{%endraw%}" #change to derive the year and administrationDate, not the period
          TestAdmin: "{%raw%}{{ 2000 | int + TestAdmin[-2:] | int }}{%endraw%}"
      - operation: add_columns
        columns:
          join_key: "1"
      - operation: map_values
        column: SciGrade
        map_file: ./seeds/gradeMapping.csv
      - operation: map_values
        column: SocGrade
        map_file: ./seeds/gradeMapping.csv
      # rename student id column after x-walk operation
      - operation: modify_columns
        columns:
          ${STUDENT_ID_NAME}: "{% raw %}{{ ${STUDENT_ID_NAME} | trim }}{% endraw %}"
      - operation: filter_rows
        query: ${STUDENT_ID_NAME} != "" and ${STUDENT_ID_NAME} != None
        behavior: include
      - operation: rename_columns
        columns:
          ${STUDENT_ID_NAME}: student_unique_id

  extract_year_from_testadmin:
    source: $transformations.cleaned_input
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
      - operation: rename_columns
        columns:
          TestAdmin: SchoolYear
      - operation: keep_columns
        columns:
          - SchoolYear
          - join_key
      - operation: distinct_rows
          

  # Get distinct assessment identifiers
  assessment_identifiers:
    source: $sources.assessments
    operations:
      - operation: add_columns
        columns:
          join_key: "1"         
          descriptor_namespace_override: ${DESCRIPTOR_NAMESPACE_OVERRIDE}
          # SchoolYear: ${SCHOOL_YEAR}
      - operation: join
        sources:
          - $transformations.extract_year_from_testadmin
        join_type: inner
        left_key: join_key
        right_key: join_key
      - operation: modify_columns
        columns:
          SchoolYear: "{% raw %}{{ SchoolYear | int }}{% endraw %}"
      - operation: filter_rows
        query: '(assessmentIdentifier == "SC_PASS_Social_Studies" and SchoolYear >= "2021")'
        behavior: exclude
      
  stage_grade_level:
    source: $sources.gradeLevelDescriptors
    operations:
      - operation: rename_columns
        columns:
          to: Grade_Namespace
          from: Grade_CodeValue

  stage_assessment_platform_type:
    source: $sources.assessmentPlatformTypeDescriptors
    operations:
      - operation: add_columns
        columns:
          joinKey: "1"

  grade_level_descriptors:
    source: $transformations.stage_grade_level #we need all the grade levels in assessment object
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
          grade_json: >
            {%raw-%}{%- if Grade_CodeValue is not none and Grade_CodeValue | length and Grade_CodeValue != 'NULL' -%}
            {
              "gradeLevelDescriptor": "{{Grade_Namespace}}"
            },
            {%-endif-%}
            {%-endraw%}
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{grade_json | replace('\n', '')-}}{%endraw%}"
      # group and aggregate:
      - operation: group_by
        group_by_columns:
          - join_key
        create_columns:
          grade_json: agg(grade_json,)
      # there will be a trailing comma, want to get rid of that
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{value.rstrip().rstrip(',')}}{%endraw%}"
      - operation: keep_columns
        columns:
          - join_key
          - grade_json 

  period_descriptors:
    source: $sources.assessmentPeriodDescriptors
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
          period_json: >
              {%raw-%}  
              {
                "assessmentPeriodDescriptor": "{{namespace}}#{{codeValue}}"
              }
              {%-endraw%}
      - operation: modify_columns
        columns:
          period_json: "{%raw%}{{period_json | replace('\n', '')}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - join_key
        create_columns: 
          period_json: agg(period_json,,)
      - operation: keep_columns
        columns:
          - join_key
          - period_json

  assessment_platform_types:
    source: $transformations.stage_assessment_platform_type
    operations:
      - operation: add_columns
        columns:
          join_key: "Key"
          platform_type_json: >
              {%raw-%} {%- if codeValue is not none and codeValue | length -%}
              {
                "platformTypeDescriptor": "{{namespace}}#{{codeValue}}"
              }
              {%-endif-%}
              {%-endraw%}
      - operation: modify_columns
        columns:
          platform_type_json: "{%raw%}{{platform_type_json | replace('\n', '')-}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - join_key
        create_columns:
          platform_type_json: agg(platform_type_json,,)    

  # Final assessments dataframe
  assessments:
    source: $transformations.assessment_identifiers
    operations:
      # add: grade_json
      - operation: join
        sources:
          - $transformations.grade_level_descriptors
        join_type: inner
        left_key: join_key
        right_key: join_key
        right_keep_columns: 
          - grade_json
      - operation: join
        sources: 
          - $transformations.period_descriptors
        join_type: inner
        left_key: join_key
        right_key: join_key
        right_keep_columns: 
          - period_json
      - operation: join
        sources:
          - $transformations.assessment_platform_types
        join_type: left
        left_key: join_key
        right_key: join_key
        right_keep_columns: 
          - platform_type_json     

  # <<<<< Prepare objective-assessments <<<<<
  objective_assessments:
    source: $sources.objectiveAssessments
    operations:
      - operation: add_columns
        columns:
         # SchoolYear: ${SCHOOL_YEAR}
          join_key: "1"
      - operation: join
        sources:
          - $transformations.extract_year_from_testadmin
        join_type: inner
        left_key: join_key
        right_key: join_key

  # >>>>> Prepare student-assessments >>>>>

  student_assessments:
    source: $transformations.cleaned_input
    operations:
      - operation: join
        sources:
          - $transformations.assessment_identifiers
        join_type: inner
        left_key: join_key
        right_key: join_key
      - operation: modify_columns
        columns:
          SciMode: "{%raw%}{{ (SciMode | default('', true) | trim) }}{%endraw%}"
          SocMode: "{%raw%}{{ (SocMode | default('', true) | trim) }}{%endraw%}"
      #Choose mode based on assessmentIdentifier
      - operation: add_columns
        columns:
          assessment_mode: >
            {%raw-%}
            {% if assessmentIdentifier == 'SC_PASS_Science' %}
              {{ SciMode }}
            {% elif assessmentIdentifier == 'SC_PASS_Social_Studies' %}
              {{ SocMode }}
            {% endif %}
            {%-endraw%}
          prefix: >
            {%raw-%}
             {% if assessmentIdentifier == 'SC_PASS_Science' %}Sci{% elif assessmentIdentifier == 'SC_PASS_Social_Studies' %}Soc{% endif %}
            {%-endraw%}
      - operation: add_columns
        columns:
          has_any_score: >
            {% raw -%}
            {% if prefix == 'Sci' %}
              {{ 1 if (
                  (SciSS   | default('', true) | string | trim and (SciSS   | string | lower != 'none')) or
                  (SciAg   | default('', true) | string | trim and (SciAg   | string | lower != 'none'))
                ) else 0 }}
            {% elif prefix == 'Soc' %}
              {{ 1 if (
                  (SocSS   | default('', true) | string | trim and (SocSS   | string | lower != 'none')) or
                  (SocAg   | default('', true) | string | trim and (SocAg   | string | lower != 'none'))
                ) else 0 }}
            {% else %}0{% endif %}
            {%- endraw %}

      - operation: add_columns
        columns:
          has_any_objective: >
            {% raw -%}
            {% if prefix == 'Sci' %}
              {{ 1 if (
                (SciLev1|default('',true)|string|trim and (SciLev1|string|lower!='none')) or
                (SciLev2|default('',true)|string|trim and (SciLev2|string|lower!='none')) or
                (SciLev3|default('',true)|string|trim and (SciLev3|string|lower!='none')) or
                (SciLev4|default('',true)|string|trim and (SciLev4|string|lower!='none')) or
                (SciLev5|default('',true)|string|trim and (SciLev5|string|lower!='none')) or
                (SciLev6|default('',true)|string|trim and (SciLev6|string|lower!='none'))
              ) else 0 }}
            {% elif prefix == 'Soc' %}
              {{ 1 if (
                (SocLev1|default('',true)|string|trim and (SocLev1|string|lower!='none')) or
                (SocLev2|default('',true)|string|trim and (SocLev2|string|lower!='none')) or
                (SocLev3|default('',true)|string|trim and (SocLev3|string|lower!='none')) or
                (SocLev4|default('',true)|string|trim and (SocLev4|string|lower!='none')) or
                (SocLev5|default('',true)|string|trim and (SocLev5|string|lower!='none')) or
                (SocLev6|default('',true)|string|trim and (SocLev6|string|lower!='none')) or
                (SocLev7|default('',true)|string|trim and (SocLev7|string|lower!='none'))
              ) else 0 }}
            {% else %}0{% endif %}
            {%- endraw %}

      - operation: modify_columns
        columns:
          has_any_score: >
            {% raw %}{{ (has_any_score | string | replace('\n','') | trim) | int }}{% endraw %}
          has_any_objective: >
            {% raw %}{{ (has_any_objective | string | replace('\n','') | trim) | int }}{% endraw %}
      - operation: modify_columns
        columns:
          assessment_mode: "{%raw%}{{ assessment_mode_raw | lower | replace(' ', '') | replace('/', '-') }}{%endraw%}"
      - operation: add_columns
        columns:
          administration_date: "{%raw%}{{SchoolYear}}-05-15{%endraw%}" 
          combined_student_assessment_id: "{%raw%}{{student_unique_id}}-{{SchoolID}}-{{SchoolYear}}-{{assessmentIdentifier}}-{{assessment_mode}}{%endraw%}"  
          student_assessment_identifier: "{%raw%}{{ md5(combined_student_assessment_id) }}{%endraw%}"
      - operation: filter_rows
        query: has_any_score == '1' or has_any_objective =='1'
        behavior: include
        
  # <<<<< Prepare student-assessments <<<<<

  # >>>>> Prepare AssessmentEducationOrganizationAssociations >>>>>
  prepare_student_assessment_valid_school:
    source: $transformations.student_assessments
    operations:
      - operation: filter_rows
        query: SchoolID != "" and SchoolID != None
        behavior: include
      - operation: distinct_rows
  # <<<<< Prepare AssessmentEducationOrganizationAssociations <<<<<

destinations:
  assessments:
    source: $transformations.assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  objectiveAssessments:
    source: $transformations.objective_assessments
    template: ./templates/objectiveAssessments.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.student_assessments
    template: ./templates/studentAssessments.jsont
    extension: jsonl
    linearize: True
  studentAssessmentEducationOrganizationAssociations:
    source: $transformations.prepare_student_assessment_valid_school
    template: ./templates/studentAssessmentEducationOrganizationAssociations.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  assessmentCategoryDescriptors:
    source: $sources.assessmentCategoryDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  accommodationDescriptors:
    source: $sources.accommodationDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  assessmentPeriodDescriptors:
    source: $sources.assessmentPeriodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  platformTypeDescriptors:
    source: $sources.assessmentPlatformTypeDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
