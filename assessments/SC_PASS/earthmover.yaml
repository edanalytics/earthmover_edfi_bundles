version: 2
config:
  log_level: INFO
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_graph: false
  show_stacktrace: true
  parameter_defaults:
    # You can set these values at the command line or leave the defaults
    OUTPUT_DIR: ./output/
    STATE_FILE: ./tmp/.earthmover/runs.csv
    API_YEAR: ''
    STUDENT_ID_NAME: 'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature
    POSSIBLE_STUDENT_ID_COLUMNS: StateID,PermID
    DESCRIPTOR_NAMESPACE_OVERRIDE: uri://ed-fi.org

sources:

  input:
    file: ${INPUT_FILE}
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  assessmentCategoryDescriptors:
    file: ./seeds/assessmentCategoryDescriptors.csv
    header_rows: 1
  assessments:
    file: ./seeds/assessments.csv
    header_rows: 1
  objectiveAssessments:
    file: ./seeds/objectiveAssessments.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1
  gradeLevelDescriptors:
    file: ./seeds/gradeMapping.csv
    header_rows: 1
  accommodationDescriptors:
    file: ./seeds/accommodationDescriptors.csv
    header_rows: 1
  assessmentPeriodDescriptors:
    file: ./seeds/assessmentPeriodDescriptors.csv
    header_rows: 1

transformations:
  input:
      source: $sources.input
      operations: []       
      
  # modify input for basic mappings
  cleaned_input:
    source: $transformations.input
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
      - operation: modify_columns
        columns:
          SciGrade: "{%raw%}{{ SciGrade | int }}{%endraw%}"
          SocGrade: "{%raw%}{{ SocGrade | int }}{%endraw%}"
          TestAdmin: "{%raw%}{{ (TestAdmin | default('', true) | trim)[:2] }}{%endraw%}" #change to derive the year and administrationDate, not the period
      - operation: map_values
        column: SciGrade
        map_file: ./seeds/gradeMapping.csv
      - operation: map_values
        column: SocGrade
        map_file: ./seeds/gradeMapping.csv
      # rename student id column after x-walk operation
      - operation: modify_columns
        columns:
          ${STUDENT_ID_NAME}: "{% raw %}{{ ${STUDENT_ID_NAME} | trim }}{% endraw %}"
      - operation: filter_rows
        query: ${STUDENT_ID_NAME} != "" and ${STUDENT_ID_NAME} != None
        behavior: include
      - operation: rename_columns
        columns:
          ${STUDENT_ID_NAME}: student_unique_id
      

  # Get distinct assessment identifiers
  assessment_identifiers:
    source: $sources.assessments
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
          SchoolYear: ${SCHOOL_YEAR}
          descriptor_namespace_override: ${DESCRIPTOR_NAMESPACE_OVERRIDE}
      - operation: filter_rows
        query: '(assessmentIdentifier == "SC_PASS_Social_Studies" and SchoolYear >= 2021)'
        behavior: exclude
      
  stage_grade_level:
    source: $sources.gradeLevelDescriptors
    operations:
      - operation: rename_columns
        columns:
          to: Grade_Namespace
          from: Grade_CodeValue

  grade_level_descriptors:
    source: $transformations.stage_grade_level #we need all the grade levels in assessment object
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
          grade_json: >
            {%raw-%}{%- if Grade_CodeValue is not none and Grade_CodeValue | length and Grade_CodeValue != 'NULL' -%}
            {
              "gradeLevelDescriptor": "{{Grade_Namespace}}"
            },
            {%-endif-%}
            {%-endraw%}
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{grade_json | replace('\n', '')-}}{%endraw%}"
      # group and aggregate:
      - operation: group_by
        group_by_columns:
          - join_key
        create_columns:
          grade_json: agg(grade_json,)
      # there will be a trailing comma, want to get rid of that
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{value.rstrip().rstrip(',')}}{%endraw%}"
      - operation: keep_columns
        columns:
          - join_key
          - grade_json 

  period_descriptors:
    source: $sources.assessmentPeriodDescriptors
    operations:
      - operation: add_columns
        columns:
          join_key: "1"
          period_json: >
              {%raw-%}  
              {
                "assessmentPeriodDescriptor": "{{namespace}}#{{codeValue}}"
              }
              {%-endraw%}
      - operation: modify_columns
        columns:
          period_json: "{%raw%}{{period_json | replace('\n', '')}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - join_key
        create_columns: 
          period_json: agg(period_json,,)
      - operation: keep_columns
        columns:
          - join_key
          - period_json    

  # Final assessments dataframe
  assessments:
    source: $transformations.assessment_identifiers
    operations:
      # add: grade_json
      - operation: join
        sources:
          - $transformations.grade_level_descriptors
        join_type: inner
        left_key: join_key
        right_key: join_key
        right_keep_columns: 
          - grade_json
      - operation: join
        sources: 
          - $transformations.period_descriptors
        join_type: inner
        left_key: join_key
        right_key: join_key
        right_keep_columns: 
          - period_json     

  # <<<<< Prepare objective-assessments <<<<<
  objective_assessments:
    source: $sources.objectiveAssessments
    operations:
      - operation: add_columns
        columns:
          SchoolYear: ${SCHOOL_YEAR}
          join_key: "1"

  # >>>>> Prepare student-assessments >>>>>

  student_assessments:
    source: $transformations.cleaned_input
    operations:
      - operation: join
        sources:
          - $transformations.assessment_identifiers
        join_type: inner
        left_key: join_key
        right_key: join_key
      - operation: add_columns
        columns:
          administration_date: "{%raw%}{{${SCHOOL_YEAR} ~ '-05-15'}}{%endraw%}"
          combined_student_assessment_id: "{%raw%}{{student_unique_id}}-{{SchoolID}}-{{SchoolYear}}-{{assessmentIdentifier}}{%endraw%}"  
          student_assessment_identifier: "{%raw%}{{ md5(combined_student_assessment_id) }}{%endraw%}"
        
  # <<<<< Prepare student-assessments <<<<<

  # >>>>> Prepare AssessmentEducationOrganizationAssociations >>>>>
  prepare_student_assessment_valid_school:
    source: $transformations.student_assessments
    operations:
      - operation: filter_rows
        query: SchoolID != "" and SchoolID != None
        behavior: include
  # <<<<< Prepare AssessmentEducationOrganizationAssociations <<<<<

destinations:
  assessments:
    source: $transformations.assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  objectiveAssessments:
    source: $transformations.objective_assessments
    template: ./templates/objectiveAssessments.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.student_assessments
    template: ./templates/studentAssessments.jsont
    extension: jsonl
  studentAssessmentEducationOrganizationAssociations:
    source: $transformations.prepare_student_assessment_valid_school
    template: ./templates/studentAssessmentEducationOrganizationAssociations.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  assessmentCategoryDescriptors:
    source: $sources.assessmentCategoryDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  accommodationDescriptors:
    source: $sources.accommodationDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  assessmentPeriodDescriptors:
    source: $sources.assessmentPeriodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
