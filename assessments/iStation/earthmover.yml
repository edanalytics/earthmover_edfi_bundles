version: 2

config:
  log_level: INFO
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_stacktrace: true
  parameter_defaults:
    SUBJECT: reading
    STUDENT_ID_NAME: student_id
    STUDENT_ID_XWALK: ''
    DATABASE_CONNECTION: ''
    PERCENTILE_MAPPING: ''
    ISTATION_ENDPOINT: 'report'

sources:
  istation_input:
    file: ${INPUT_FILE}
    header_rows: 1
  assessments:
    file: ${BUNDLE_DIR}/seeds/assessments.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ${BUNDLE_DIR}/seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1

  {% if "${DATABASE_CONNECTION}" | length %}
  student_id_mapping:
    connection: ${DATABASE_CONNECTION}
    query: ${STUDENT_ID_QUERY}

  {% else %}
  student_id_mapping:
    file: ${STUDENT_ID_XWALK}
    header_rows: 1
    columns:
      - student_id_from
      - student_id_to
    optional: True
  {% endif %}

transformations:
  # This step is done before iterating through the months because the run-time Jinja requres an actual column name. Something like {{month ~ 'LEVEL'}} won't work
  {% if "${ISTATION_ENDPOINT}" == "export" %}
  # The export data is already stacked
  stacked_results:
    source: $sources.istation_input
    operations:
      - operation: add_columns
        columns:
          perf_lvl_type: "{%raw%}tier{%endraw%}"
      - operation: rename_columns
        columns:
          STUDENT_ID: student_id
          DOMAIN: domain
          GRADE: grade_level
          UDATE: admin_date
          SCORE: score
          PTILE: percentile
          TIER: perf_lvl_value
  {% else %}
  define_perf_levels:
    source: $sources.istation_input
    operations:
      - operation: add_columns
        columns:
          August_perf_lvl: "{%raw%}{% if August_LEVEL is defined %}{{August_LEVEL}}{% else %}{{August_TIER}}{% endif %}{%endraw%}"
          September_perf_lvl: "{%raw%}{% if September_LEVEL is defined %}{{September_LEVEL}}{% else %}{{September_TIER}}{% endif %}{%endraw%}"
          October_perf_lvl: "{%raw%}{% if October_LEVEL is defined %}{{October_LEVEL}}{% else %}{{October_TIER}}{% endif %}{%endraw%}"
          November_perf_lvl: "{%raw%}{% if November_LEVEL is defined %}{{November_LEVEL}}{% else %}{{November_TIER}}{% endif %}{%endraw%}"
          December_perf_lvl: "{%raw%}{% if December_LEVEL is defined %}{{December_LEVEL}}{% else %}{{December_TIER}}{% endif %}{%endraw%}"
          January_perf_lvl: "{%raw%}{% if January_LEVEL is defined %}{{January_LEVEL}}{% else %}{{January_TIER}}{% endif %}{%endraw%}"
          February_perf_lvl: "{%raw%}{% if February_LEVEL is defined %}{{February_LEVEL}}{% else %}{{February_TIER}}{% endif %}{%endraw%}"
          March_perf_lvl: "{%raw%}{% if March_LEVEL is defined %}{{March_LEVEL}}{% else %}{{March_TIER}}{% endif %}{%endraw%}"
          April_perf_lvl: "{%raw%}{% if April_LEVEL is defined %}{{April_LEVEL}}{% else %}{{April_TIER}}{% endif %}{%endraw%}"
          May_perf_lvl: "{%raw%}{% if May_LEVEL is defined %}{{May_LEVEL}}{% else %}{{May_TIER}}{% endif %}{%endraw%}"
          June_perf_lvl: "{%raw%}{% if June_LEVEL is defined %}{{June_LEVEL}}{% else %}{{June_TIER}}{% endif %}{%endraw%}"
          July_perf_lvl: "{%raw%}{% if July_LEVEL is defined %}{{July_LEVEL}}{% else %}{{July_TIER}}{% endif %}{%endraw%}"
          perf_lvl_type: "{%raw%}{% if August_LEVEL is defined %}level{% else %}tier{% endif %}{%endraw%}"

  {% set months = ['August', 'September', 'October', 'November', 'December', 'January', 'February', 'March', 'April', 'May', 'June'] %}
  {% for month in months %}
  scores_{{month}}:
    source: $$transformations.define_perf_levels
    operations:
      - operation: keep_columns
        columns:
          - STUDENT_ID
          - DOMAIN
          - GRADE
          - {{month}}_ADMIN_DATE
          - {{month}}_SCORE
          - {{month}}_PTILE
          - {{month}}_perf_lvl
          - perf_lvl_type
      - operation: rename_columns
        columns:
          STUDENT_ID: student_id
          DOMAIN: domain
          GRADE: grade_level
          {{month}}_ADMIN_DATE: admin_date
          {{month}}_SCORE: score
          {{month}}_PTILE: percentile
          {{month}}_perf_lvl: perf_lvl_value
      - operation: filter_rows
        query: admin_date != ''
        behavior: include
  {% endfor %}

  stacked_results:
    source: $transformations.scores_{{months[0]}}
    operations:
      - operation: union
        sources:
          {% for month in months[1:] %}
          - $transformations.scores_{{month}}
          {% endfor %}
  {% endif %}


  {% if "${SUBJECT}" == "reading" %}
    {% set test = "Istation Reading" %}
  {% elif "${SUBJECT}" == "spanish" %}
    {% set test = "Istation Spanish" %}
  {% endif %}
  studentAssessments:
    source:
      $transformations.stacked_results
    operations:
      - operation: join
        sources:
          - $sources.student_id_mapping
        join_type: left
        left_key: student_id
        right_key: student_id_from
      - operation: add_columns
        columns:
          assessment_year: ${API_YEAR}
          assessment_identifier: {{test}}
      - operation: rename_columns
        columns:
          ${STUDENT_ID_NAME}: student_unique_id
      - operation: modify_columns
        columns:
          student_unique_id: "{%raw%}{{ student_unique_id | string }}{%endraw%}"
      - operation: date_format
        column: admin_date
        from_format: "%m/%d/%Y"
        to_format: "%Y-%m-%d"
      - operation: combine_columns
        columns:
          - student_unique_id
          - admin_date
        new_column: assessment_unique_id
        separator: '-'
      - operation: modify_columns
        columns:
          assessment_unique_id: "{%raw%}{{ md5(assessment_unique_id) }}{%endraw%}"
      - operation: map_values
        column: grade_level
        map_file: ${BUNDLE_DIR}/seeds/map_grade_level.csv
      {% if "${PERCENTILE_MAPPING}" != '' %}
      - operation: drop_columns
        columns:
          - perf_lvl_value
          - perf_lvl_type
      - operation: duplicate_columns
        columns:
          percentile: perf_lvl_value
      - operation: map_values
        column: perf_lvl_value
        map_file: ${BUNDLE_DIR}/seeds/map_percentile_to_${PERCENTILE_MAPPING}.csv
      - operation: add_columns
        columns:
          perf_lvl_type: ${PERCENTILE_MAPPING}
      {% endif %}

destinations:
  studentAssessments:
    source: $transformations.studentAssessments
    template: ${BUNDLE_DIR}/templates/studentAssessments.jsont
    extension: jsonl
  assessments:
    source: $sources.assessments
    template: ${BUNDLE_DIR}/templates/assessments.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ${BUNDLE_DIR}/templates/assessmentReportingMethodDescriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ${BUNDLE_DIR}/templates/performanceLevelDescriptors.jsont
    extension: jsonl
