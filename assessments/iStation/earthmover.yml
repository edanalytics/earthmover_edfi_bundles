version: 2

config:
  log_level: DEBUG
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_stacktrace: true
  parameter_defaults:
    SUBJECT: reading
    STUDENT_ID_NAME: student_id
    STUDENT_ID_XWALK: ''
    DATABASE_CONNECTION: ''
    PERCENTILE_MAPPING: ''

sources:
  istation_input:
    file: ${INPUT_FILE}
    header_rows: 1
  assessments:
    file: ${BUNDLE_DIR}/seeds/assessments.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ${BUNDLE_DIR}/seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1
  map_grade_level:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1
  map_percentile_to_level:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1
  map_percentile_to_tier:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1

  {% if "${DATABASE_CONNECTION}" | length %}
  student_id_mapping:
    connection: ${DATABASE_CONNECTION}
    query: ${STUDENT_ID_QUERY}
  
  {% else %}
  student_id_mapping:
    file: ${STUDENT_ID_XWALK}
    header_rows: 1
    columns: 
      - student_id_from 
      - student_id_to
    optional: True 
  {% endif %}

transformations:
  {% set months = ['August', 'September', 'October', 'November', 'December', 'January', 'February', 'March', 'April', 'May'] %}
  {% for month in months %}
  {% set month_level = month ~ '_LEVEL' %}
  {% set month_tier = month ~ '_TIER' %}
  scores_{{month}}:
    source: $sources.istation_input
    operations:
      - operation: duplicate_columns
        columns:
          {% if August_LEVEL is not none and August_LEVEL|length %}{{ month_level }}{% else %}{{ month_tier }}{% endif %}: perf_lvl_value
      - operation: add_columns
        columns:
          perf_lvl_type: {% if August_LEVEL is not none and August_LEVEL|length %}'level'{% else %}'tier'{% endif %}
      - operation: keep_columns
        columns:
          - STUDENT_ID
          - DOMAIN
          - GRADE
          - {{month}}_ADMIN_DATE
          - {{month}}_SCORE
          - {{month}}_PTILE
          - perf_lvl_value
          - perf_lvl_type
      - operation: rename_columns
        columns:
          STUDENT_ID: student_id
          DOMAIN: domain
          GRADE: grade_level
          {{month}}_ADMIN_DATE: admin_date
          {{month}}_SCORE: score
          {{month}}_PTILE: percentile
      - operation: filter_rows
        query: admin_date != ''
        behavior: include
  {% endfor %}  

  stacked_months:
    source: $transformations.scores_{{months[0]}}
    operations:
      - operation: union
        sources:
          {% for month in months[1:] %}
          - $transformations.scores_{{month}}
          {% endfor %}

  {% if "${SUBJECT}" == "reading" %}
    {% set test = "Istation Reading" %}
  {% elif "${SUBJECT}" == "spanish" %}
    {% set test = "Istation Spanish" %}
  {% endif %}
  studentAssessments:
    source: $transformations.stacked_months
    operations:
      - operation: join
        sources:
          - $sources.student_id_mapping
        join_type: left
        left_key: student_id
        right_key: student_id_from
      - operation: add_columns
        columns:
          assessment_year: ${API_YEAR}
          assessment_identifier: {{test}}
      - operation: rename_columns
        columns:
          ${STUDENT_ID_NAME}: student_unique_id
      - operation: modify_columns
        columns:
          student_unique_id: "{%raw%}{{ student_unique_id | string }}{%endraw%}"
      - operation: date_format
        column: admin_date
        from_format: "%m/%d/%Y"
        to_format: "%Y-%m-%d"
      - operation: combine_columns
        columns:
          - student_unique_id
          - admin_date
        new_column: assessment_unique_id
        separator: '-'
      - operation: modify_columns
        columns:
          assessment_unique_id: "{%raw%}{{ md5(assessment_unique_id) }}{%endraw%}"
      - operation: map_values
        column: grade_level
        map_file: ${BUNDLE_DIR}/seeds/map_grade_level.csv
      {% if "${PERCENTILE_MAPPING}" != '' %}
      - operation: drop_columns
        columns: 
          - perf_lvl_value
          - perf_lvl_type
      - operation: duplicate_columns
        columns:
          percentile: perf_lvl_value
      - operation: map_values
        column: perf_lvl_value
        map_file: ${BUNDLE_DIR}/seeds/map_percentile_to_${PERCENTILE_MAPPING}.csv
      - operation: add_columns
        columns: 
          perf_lvl_type: ${PERCENTILE_MAPPING}
      {% endif %}

destinations:
  studentAssessments:
    source: $transformations.studentAssessments
    template: ${BUNDLE_DIR}/templates/studentAssessments.jsont
    extension: jsonl 
  assessments:
    source: $sources.assessments
    template: ${BUNDLE_DIR}/templates/assessments.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ${BUNDLE_DIR}/templates/assessmentReportingMethodDescriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ${BUNDLE_DIR}/templates/performanceLevelDescriptors.jsont
    extension: jsonl