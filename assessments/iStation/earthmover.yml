config:
  log_level: DEBUG
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_stacktrace: true
  parameter_defaults:
    STUDENT_ID_NAME: student_id
    STUDENT_ID_XWALK: ''
    SNOWFLAKE_CONNECTION: ''

sources:
  istation_input:
    file: ${INPUT_FILE}
    header_rows: 1
  assessments:
    file: ${BUNDLE_DIR}/seeds/assessments.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ${BUNDLE_DIR}/seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1

  {% if "${SNOWFLAKE_CONNECTION}" | length %}
  student_id_mapping:
    connection: ${SNOWFLAKE_CONNECTION}
    query: >
      select ${STUDENT_ID_WH} as student_id_from, student_unique_id as student_id_to
      from analytics.prod_wh.dim_student
      where tenant_code = '${TENANT_CODE}'
      and school_year = '${API_YEAR}'
  
  {% else %}
  student_id_mapping:
    file: ${STUDENT_ID_XWALK}
    header_rows: 1
    columns: 
      - student_id_from 
      - student_id_to
    optional: True 
  {% endif %}

transformations:
  {% set months = ['August', 'September', 'October', 'November', 'December', 'January', 'February', 'March', 'April', 'May'] %}
  {% for month in months %}
  scores_{{month}}:
    operations:
      - operation: keep_columns
        source: $sources.istation_input
        columns:
          - STUDENT_ID
          - DOMAIN
          - GRADE
          - {{month}}_SCORE
          - {{month}}_PTILE
          - {{month}}_ADMIN_DATE
      - operation: rename_columns
        source: $transformations.scores_{{month}}
        columns:
          STUDENT_ID: student_id
          DOMAIN: domain
          GRADE: grade_level
          {{month}}_SCORE: score
          {{month}}_PTILE: percentile
          {{month}}_ADMIN_DATE: admin_date
      - operation: filter_rows
        source: $transformations.scores_{{month}}
        query: admin_date != ''
        behavior: include
  {% endfor %}  

  stacked_months:
    operations:
      - operation: union
        sources:
          {% for month in months %}
          - $transformations.scores_{{month}}
          {% endfor %}

  studentAssessments:
    operations:
      - operation: join
        sources: 
          - $transformations.stacked_months
          - $sources.student_id_mapping
        join_type: left
        left_key: student_id
        right_key: student_id_from
      - operation: add_columns
        source: $transformations.studentAssessments
        columns:
          assessment_year: ${API_YEAR}
      - operation: rename_columns
        source: $transformations.studentAssessments
        columns:
          ${STUDENT_ID_NAME}: student_unique_id
      - operation: modify_columns
        source: $transformations.studentAssessments
        columns:
          student_unique_id: "{%raw%}{{ student_unique_id | string }}{%endraw%}"
      - operation: date_format
        source: $transformations.studentAssessments
        column: admin_date
        from_format: "%m/%d/%Y"
        to_format: "%Y-%m-%d"
      - operation: combine_columns
        source: $transformations.studentAssessments
        columns:
          - student_unique_id
          - admin_date
        new_column: assessment_unique_id
        separator: '-'
      - operation: modify_columns
        source: $transformations.studentAssessments
        columns:
          assessment_unique_id: "{%raw%}{{ md5(assessment_unique_id) }}{%endraw%}"
      - operation: map_values
        source: $transformations.studentAssessments
        column: grade_level
        map_file: ${BUNDLE_DIR}/seeds/map_grade_level.csv
      - operation: duplicate_columns
        source: $transformations.studentAssessments
        columns:
          percentile: level
      - operation: map_values
        source: $transformations.studentAssessments
        column: level
        map_file: ${BUNDLE_DIR}/seeds/map_percentile_to_level.csv

destinations:
  studentAssessments:
    source: $transformations.studentAssessments
    template: ${BUNDLE_DIR}/templates/studentAssessments.jsont
    extension: jsonl 
  assessments:
    source: $sources.assessments
    template: ${BUNDLE_DIR}/templates/assessments.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ${BUNDLE_DIR}/templates/assessmentReportingMethodDescriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ${BUNDLE_DIR}/templates/performanceLevelDescriptors.jsont
    extension: jsonl