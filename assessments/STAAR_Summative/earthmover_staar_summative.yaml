# See accompanying README.md for details about this file.
version: 2

config:
  log_level: INFO
  output_dir: ${OUTPUT_DIR} # this will be a parameter that is passed through from the command line, leave this as-is
  memory_limit: 1GB
  state_file: ./runs.csv
  show_graph: False
  parameter_defaults:
    # the following should be included in every template
    STUDENT_ID_FROM: tx_unique_student_id
    STUDENT_ID_NAME: tx_unique_student_id
    STUDENT_ID_XWALK: ''
    STUDENT_ID_QUERY: ''
    DATABASE_CONNECTION: ''

sources:

  # SEEDS
  assessmentReportingMethodDescriptors:
    file: ${BUNDLE_DIR}/seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ${BUNDLE_DIR}/seeds/performanceLevelDescriptors.csv
    header_rows: 1
  objectiveAssessments:
    file: ${BUNDLE_DIR}/seeds/objectiveAssessments.csv
    header_rows: 1
  obj_assess_codes_xwalk:
    file: ${BUNDLE_DIR}/seeds/obj_assess_codes_xwalk.csv
    header_rows: 1
  assessments:
    file: ${BUNDLE_DIR}/seeds/assessments.csv
    header_rows: 1

  # INPUT STU ASSESSMENT FILES
  staar_summative_input:
    file: ${INPUT_FILE}
    header_rows: 1

  # OTHER XWALKS
  student_id_xwalk:
    # This file only needs to be supplied if the source assessment file does not
    # contain the studentUniqueId used by Ed-Fi
    file: ${STUDENT_ID_XWALK}
    header_rows: 1
    columns:
      - from
      - to
    optional: True
  administration_window_xwalk:
    file: ${BUNDLE_DIR}/seeds/administration_window_xwalk.csv
    header_rows: 1

{% set conformed_columns = 
  ['tx_unique_student_id',
   'assessment_identifier',
   'grade_level_code',
   'administration_window',
   'administration_window_label',
   'administration_window_start_date',
   'administration_window_end_date',
   'county_district_campus_number',
   'subject',
   'course_abbrev',
   'reporting_category_1_raw_score',
   'reporting_category_2_raw_score',
   'reporting_category_3_raw_score',
   'reporting_category_4_raw_score',
   'reporting_category_1_name',
   'reporting_category_2_name',
   'reporting_category_3_name',
   'reporting_category_4_name',
   'raw_score',
   'scale_score',
   'test_version',
   'score_code',
   'overall_performance_level',
   'stu_assess_id'
  ] 
%}

transformations:
  # Conform each input type to a standard shape

  # CONFORMED 3-8
  conformed_staar_summative:
    source: $sources.staar_summative_input
    operations:
      # RENAME columns to easily convert from wide to long
      - operation: rename_columns
        columns:
          # grade_level_tested is called grade_level_code in other STAAR tests (EOC), so rename so we can use the same stuASsessment.jsont
          "grade_level_tested": grade_level_code
          "administration_date": administration_window
          {% if ${API_YEAR} >= 2022 %}
          # standardize score names so we can easily convert from wide to long
          "mathematics_reporting_category_1_scores": mathematics_reporting_category_1_raw_score
          "mathematics_reporting_category_2_scores": mathematics_reporting_category_2_raw_score
          "mathematics_reporting_category_3_scores": mathematics_reporting_category_3_raw_score
          "mathematics_reporting_category_4_scores": mathematics_reporting_category_4_raw_score
          "social_studies_reporting_category_1_scores": social_studies_reporting_category_1_raw_score
          "social_studies_reporting_category_2_scores": social_studies_reporting_category_2_raw_score
          "social_studies_reporting_category_3_scores": social_studies_reporting_category_3_raw_score
          "social_studies_reporting_category_4_scores": social_studies_reporting_category_4_raw_score
          "science_reporting_category_1_scores": science_reporting_category_1_raw_score
          "science_reporting_category_2_scores": science_reporting_category_2_raw_score
          "science_reporting_category_3_scores": science_reporting_category_3_raw_score
          "science_reporting_category_4_scores": science_reporting_category_4_raw_score
          {% endif %}
          {% if ${API_YEAR} >= 2023 %}
          # starting in 2023, STAAR began reporting "reading" as "reading_language_arts", but we'll rename here to keep consistency in the convert wide-long code below
          "reading_language_arts_reporting_category_1_scores": reading_reporting_category_1_raw_score
          "reading_language_arts_reporting_category_2_scores": reading_reporting_category_2_raw_score
          "reading_language_arts_raw_score": reading_raw_score
          "reading_language_arts_scale_score": reading_scale_score
          "reading_language_arts_test_version": reading_test_version
          "reading_language_arts_test_language_version": reading_test_language_version
          "meets_grade_level_in_reading_language_arts": meets_grade_level_in_reading
          "approaches_grade_level_in_reading_language_arts": approaches_grade_level_in_reading
          "masters_grade_level_in_reading_language_arts": masters_grade_level_in_reading
          "score_code_reading_language_arts": score_code_reading
          "opportunity_key_reading_language_arts": opportunity_key_reading
          {% elif ${API_YEAR} == 2022 %}
          "reading_reporting_category_1_scores": reading_reporting_category_1_raw_score
          "reading_reporting_category_2_scores": reading_reporting_category_2_raw_score
          "reading_reporting_category_3_scores": reading_reporting_category_3_raw_score
          {% endif %}
      # ADD assess_id and missing cols
      - operation: add_columns
        columns:
          assessment_identifier: staar_summative
          school_year: "${API_YEAR}"
          # no staar 3-8 tests are linked to a course. add this value so 3-8 and EOC can have similar score structure in Ed-Fi
          course_abbrev: "no_course"
          # reading does not have a score 4. create one, so we can easily convert from wide to long
          reading_reporting_category_4_raw_score: ""
            # This column doesn't exist after 2022 -- TODO better way to handle this case?
          {% if ${API_YEAR} >= 2023 %}
          reading_reporting_category_3_raw_score: ""
          {% endif %}
          # in 2021 and earlier, reporting category scores were store in one column, e.g. '423' represented ['4','2','3']
          {% if ${API_YEAR} <= 2021 %}
          reading_reporting_category_1_raw_score: "{%raw%}{{reading_reporting_category_scores[0:2]}}{%endraw%}"
          reading_reporting_category_2_raw_score: "{%raw%}{{reading_reporting_category_scores[2:4]}}{%endraw%}"
          reading_reporting_category_3_raw_score: "{%raw%}{{reading_reporting_category_scores[4:6]}}{%endraw%}"
          mathematics_reporting_category_1_raw_score: "{%raw%}{{mathematics_reporting_category_scores[0:2]}}{%endraw%}"
          mathematics_reporting_category_2_raw_score: "{%raw%}{{mathematics_reporting_category_scores[2:4]}}{%endraw%}"
          mathematics_reporting_category_3_raw_score: "{%raw%}{{mathematics_reporting_category_scores[4:6]}}{%endraw%}"
          mathematics_reporting_category_4_raw_score: "{%raw%}{{mathematics_reporting_category_scores[6:8]}}{%endraw%}"
          social_studies_reporting_category_1_raw_score: "{%raw%}{{social_studies_reporting_category_scores[0:2]}}{%endraw%}"
          social_studies_reporting_category_2_raw_score: "{%raw%}{{social_studies_reporting_category_scores[2:4]}}{%endraw%}"
          social_studies_reporting_category_3_raw_score: "{%raw%}{{social_studies_reporting_category_scores[4:6]}}{%endraw%}"
          social_studies_reporting_category_4_raw_score: "{%raw%}{{social_studies_reporting_category_scores[6:8]}}{%endraw%}"
          science_reporting_category_1_raw_score: "{%raw%}{{science_reporting_category_scores[0:2]}}{%endraw%}"
          science_reporting_category_2_raw_score: "{%raw%}{{science_reporting_category_scores[2:4]}}{%endraw%}"
          science_reporting_category_3_raw_score: "{%raw%}{{science_reporting_category_scores[4:6]}}{%endraw%}"
          science_reporting_category_4_raw_score: "{%raw%}{{science_reporting_category_scores[6:8]}}{%endraw%}"
          writing_reporting_category_1_raw_score: "{%raw%}{{writing_reporting_category_scores[0:2]}}{%endraw%}"
          writing_reporting_category_2_raw_score: "{%raw%}{{writing_reporting_category_scores[2:4]}}{%endraw%}"
          writing_reporting_category_3_raw_score: "{%raw%}{{writing_reporting_category_scores[4:6]}}{%endraw%}"
          # writing does not have a score 4. create one, so we can easily convert from wide to long
          writing_reporting_category_4_raw_score: ""
          {% endif %}

  # 3-8 -- CONVERT FROM WIDE TO LONG
  {% set subjects = {
    'reading': 'Reading',
    'mathematics': 'Mathematics',
    'social_studies': 'Social Studies',
    'science': 'Science'
    }
  %}
  {% if ${API_YEAR} <= 2021 %}
    {% set _ = subjects.update({'writing': 'Writing'}) %}
  {% endif %}
  {% for subject in subjects %}
  {% set descriptor_subject = subjects[subject] %}
  staar_summative_scores_{{subject}}:
    source: $transformations.conformed_staar_summative
    operations:
      # RENAME subject-specific columns to generic colnames so we can stack the data long
      - operation: rename_columns
        columns:
          {{subject}}_reporting_category_1_raw_score: reporting_category_1_raw_score
          {{subject}}_reporting_category_2_raw_score: reporting_category_2_raw_score
          {{subject}}_reporting_category_3_raw_score: reporting_category_3_raw_score
          {{subject}}_reporting_category_4_raw_score: reporting_category_4_raw_score
          {{subject}}_raw_score: raw_score
          {{subject}}_scale_score: scale_score
          {{subject}}_test_version: test_version
          meets_grade_level_in_{{subject}}: meets_grade_level
          approaches_grade_level_in_{{subject}}: approaches_grade_level
          masters_grade_level_in_{{subject}}: masters_grade_level
          score_code_{{subject}}: score_code
          # in 2022 and later, opportunity key is the unique student assess id
          {% if ${API_YEAR} >= 2022 %}
          opportunity_key_{{subject}}: stu_assess_id
          {% endif %}
      # ADD subject, missing cols, overall_pl
      - operation: add_columns
        columns:
          subject: {{descriptor_subject}}
          # in 2021 and earlier, opportunity key didn't exist, so create own unique key
          {% if ${API_YEAR} <= 2021 %}
          stu_assess_id: "{%raw%}{{document_number}}_{{subject}}{%endraw%}"
          {% endif %}
          # use component PL columns to create overall PL
          overall_performance_level: >
            {%raw%}
              {%- if masters_grade_level == "1" -%}
                Masters
              {%- elif meets_grade_level == "1" -%}
                Meets
              {%- elif approaches_grade_level == "1" -%}
                Approaches
              {%- else -%}
                Did Not Meet
              {%- endif -%}
            {%endraw%}
      # DEDUPE years 2021 and prior, before opportunity_key was available
      {% if ${API_YEAR} <= 2021 %}
      - operation: group_by_with_rank
        group_by_columns:
          - stu_assess_id
        rank_column: stu_assess_row_number
      - operation: modify_columns
        columns:
          stu_assess_id: "{%raw%}{{value}}_{{stu_assess_row_number}}{%endraw%}"
      {% endif %}

      # JOIN ADMIN WINDOWS
      - operation: join
        sources:
          - $sources.administration_window_xwalk
        left_keys:
          - assessment_identifier
          - school_year
          - grade_level_code
          - subject
          - administration_window
        right_keys:
          - assessment_identifier
          - school_year
          - grade_level_code
          - subject
          - administration_window
        right_drop_columns:
          - course_abbrev
        join_type: inner  
      # JOIN obj assess descriptive names
      - operation: join
        sources:
          - $sources.obj_assess_codes_xwalk
        left_keys:
          - assessment_identifier
          - school_year
          - subject
          - course_abbrev
        right_keys:
          - assessment_identifier
          - school_year
          - subject
          - course
        join_type: inner
      # FILTER to non-empty stu-assess ids, e.g. if wide record had no reading test, drop the reading rows
      - operation: filter_rows
        query: stu_assess_id != ''
        behavior: include 
      # KEEP conformed columns
      - operation: keep_columns
        columns: {{conformed_columns}}

  
  {% endfor %}  

  # STACK ALL CONFORMED SETS TOGETHER
  stacked_scores:
    source: $transformations.staar_summative_scores_reading
    operations:
      - operation: union
        sources:
          - $transformations.staar_summative_scores_mathematics
          - $transformations.staar_summative_scores_social_studies
          - $transformations.staar_summative_scores_science
        {% if ${API_YEAR} <= 2021 %} 
          - $transformations.staar_summative_scores_writing
        {% endif %}

  # FINAL STEPS for stu-assess: stu_id_xwalk, api_year
  studentAssessments:
    source: $transformations.stacked_scores
    operations:
      - operation: join
        sources:
          - $sources.student_id_xwalk
        left_key: ${STUDENT_ID_FROM}
        right_key: from
        join_type: left
      - operation: duplicate_columns
        columns:
          ${STUDENT_ID_NAME}: studentUniqueId
      # add api_year as a passed-in env var
      - operation: add_columns
        columns:
          api_year: ${API_YEAR} #NOTE, this is passed by the user/airflow as an env variable''


destinations:
  studentAssessments:
    source: $transformations.studentAssessments
    template: ${BUNDLE_DIR}/templates/studentAssessment.jsont
    extension: jsonl
    linearize: True
  assessments:
    source: $sources.assessments
    template: ${BUNDLE_DIR}/templates/assessments.jsont
    extension: jsonl
    linearize: True
  objectiveAssessments:
    source: $sources.objectiveAssessments
    template: ${BUNDLE_DIR}/templates/objectiveAssessments.jsont
    extension: jsonl
    linearize: True
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ${BUNDLE_DIR}/templates/performanceLevelDescriptors.jsont
    extension: jsonl
    linearize: True
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ${BUNDLE_DIR}/templates/assessmentReportingMethodDescriptors.jsont
    extension: jsonl
    linearize: True
