version: 2
config:
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ./runs.csv
  show_graph: False
  show_stacktrace: true
  parameter_defaults:
    STUDENT_ID_NAME: 'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature edFi_studentUniqueID
    POSSIBLE_STUDENT_ID_COLUMNS: 'Student Identifier' #'PS_StudentID,StudentSUNS'
    DESCRIPTOR_NAMESPACE: uri://ed-fi.org #uri://ed.sc.gov
  
sources:
  input:
    file: ${INPUT_FILE}
    header_rows: 1
  
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  gradeLevelDescriptors:
    file: ./seeds/gradeLevelMapping.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1
  assessmentCategoryDescriptors:
    file: ./seeds/assessmentCategoryDescriptors.csv
    header_rows: 1
  assessmentPeriodDescriptors:
    file: ./seeds/assessmentPeriodDescriptors.csv
    header_rows: 1
  academicSubjectDescriptors:
    file: ./seeds/academicSubjectDescriptors.csv
    header_rows: 1

transformations:
  input:
    source: $sources.input
    operations: []

  stage_academic_subject:
    source: $sources.academicSubjectDescriptors
    operations:
      - operation: add_columns
        columns:
          joinKey: "Key"

  stage_assessments:
    source: $transformations.stage_academic_subject
    operations:
      - operation: keep_columns
        columns:
          - AP_Exam_Description
          - AP_Exam_Code
          - namespace
      - operation: add_columns
        columns:
          assessmentIdentifier: "{%raw%}AP - {{AP_Exam_Code}}{%endraw%}"
          assessmentTitle: "{%raw%}Advanced Placement - {{AP_Exam_Description}}{%endraw%}"
          assessmentFamily: "Advanced Placement"
          assessmentNamespace: "uri://collegeboard.org"
          academicSubject:  "{%raw%} {{AP_Exam_Description}}{%endraw%}"
          assessmentCategoryDescriptor: "uri://collegeboard.org/AssessmentCategoryDescriptor#Advanced Placement"
          assessmentPeriodDescriptor: "uri://collegeboard.org/AssessmentPeriodDescriptor#Spring"
          joinKey: "Key"
      - operation: rename_columns
        columns:
          namespace: academicSubjectNamespace

  stage_assessment_grade_level:
    source: $sources.gradeLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          joinKey: "Key"
      - operation: rename_columns
        columns:
          CodeValue: Grade_CodeValue 

  {% set ids = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'] %}
  {% for id in ids %}
  exam_{{id}}:
    source: $transformations.input
    operations:
      - operation: keep_columns
        columns:
          - "Student Identifier"
          - "Grade Level"
          - "AI Code"
          - Admin Year {{id}}
          - Exam Code {{id}}
          - Exam Grade {{id}}
          - "Irregularity Code #1 {{id}}"
          - "Irregularity Code #2 {{id}}"
      - operation: add_columns
        columns:
          Exam_Id:  {{id}}
      - operation: rename_columns
        columns:
          ${STUDENT_ID_NAME}: studentUniqueId
          "Grade Level": GradeLevel
          "AI Code": SchoolCode
          Admin Year {{id}}: SchoolYear
          Exam Code {{id}}: ExamCode
          Exam Grade {{id}}: Score
          "Irregularity Code #1 {{id}}": IrregularityCode1
          "Irregularity Code #2 {{id}}": IrregularityCode2
      - operation: filter_rows
        query: studentUniqueId != ''
        behavior: include
  {% endfor %}

  stacked_results:
    source: $transformations.exam_{{ids[0]}}
    operations:
      - operation: union
        sources:
          {% for id in ids[1:] %}
          - $transformations.exam_{{id}}
          {% endfor %}

  {% set awards = ['1', '2', '3', '4', '5', '6'] %}
  {% for award in awards %}
  awardType_{{award}}:
    source: $transformations.input
    operations:
      - operation: keep_columns
        columns:
          - "Student Identifier"
          - "Grade Level"
          - "AI Code"
          - Award Type {{award}}
          - Award Year {{award}}
      - operation: add_columns
        columns:
          AwardType_Id:  {{award}}
      - operation: rename_columns
        columns:
          ${STUDENT_ID_NAME}: studentUniqueId
          "Grade Level": GradeLevel
          "AI Code": SchoolCode
          Award Type {{award}}: AwardType
          Award Year {{award}}: AwardYear
      - operation: filter_rows
        query: studentUniqueId != ''
        behavior: include
  {% endfor %}

  stacked_awards:
    source: $transformations.awardType_{{awards[0]}}
    operations:
      - operation: union
        sources:
          {% for award in awards[1:] %}
          - $transformations.awardType_{{award}}
          {% endfor %}
  
  stage_student_assessment:
    source: $transformations.stacked_results
    operations:
      - operation: filter_rows
        query: ExamCode != ''
        behavior: include
      - operation: add_columns
        columns:
          School_Year: "{%raw%}{{'20'~SchoolYear}}{%endraw%}"
      - operation: join
        sources:
          - $transformations.stacked_awards
        join_type: left
        left_keys: 
          - studentUniqueId
          - SchoolYear
          - SchoolCode
          - GradeLevel
        right_keys: 
          - studentUniqueId
          - AwardYear
          - SchoolCode
          - GradeLevel
        right_keep_columns:
          - AwardType
          - AwardYear
      - operation: modify_columns
        columns:
          AwardType: "{%raw%}{{value if value != 'nan' else ''}}{%endraw%}"
  
  stage_assessment_performance_level:
    source: $sources.performanceLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          joinKey: "Key"

  performance_levels:  
    source: $transformations.stage_assessment_performance_level
    operations:
      - operation: keep_columns
        columns:
          - joinKey
          - codeValue
          - namespace
          - reportingMethod
      - operation: add_columns
        columns:
          performance_json: >
              {%raw-%} 
              {
                "assessmentReportingMethodDescriptor": "{{reportingMethod}}#AP Award",
                "performanceLevelDescriptor": "{{ namespace }}#{{ codeValue }}"
              }
              {%-endraw%} 
      - operation: modify_columns
        columns:
          performance_json: "{%raw%}{{performance_json | replace('\n', '')-}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - joinKey
        create_columns: 
          performance_json: agg(performance_json,,)

  grade_levels:
    source: $transformations.stage_assessment_grade_level
    operations:
      - operation: add_columns
        columns:
          joinKey: "Key"
          grade_json: >
              {%raw-%} {%- if Grade_CodeValue is not none and Grade_CodeValue | length -%} 
              {
                "gradeLevelDescriptor": "{{Namespace}}#{{Grade_CodeValue}}"
              }
              {%-endif-%}
              {%-endraw%}
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{grade_json | replace('\n', '')-}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - joinKey
        create_columns: 
          grade_json: agg(grade_json,,)

  prepare_assessments:
    source: $transformations.stage_assessments
    operations:
      - operation: add_columns
        columns: 
          academicSubjectDescriptor: "{%raw%}{{academicSubjectNamespace}}#{{academicSubject}}{%endraw%}"
      - operation: join
        sources:
          - $transformations.grade_levels
        join_type: inner
        left_key: joinKey
        right_key: joinKey
      - operation: join
        sources:
          - $transformations.stage_student_assessment
        join_type: inner
        left_key: AP_Exam_Code
        right_key: ExamCode
        right_keep_columns:
          - AwardYear
      - operation: join
        sources:
          - $transformations.performance_levels
        join_type: inner
        left_key: joinKey
        right_key: joinKey
        right_keep_columns:
          - performance_json

  prepare_student_assessments:
    source: $transformations.stage_student_assessment
    operations:
      - operation: add_columns
        columns:
          administrationDate: "{%raw%} {{'05-01-'~ School_Year }}{%endraw%}"
          descriptorNamespace:  ${DESCRIPTOR_NAMESPACE}
          #eventDescription: "{%raw%}{{IrregularityCode1}}{%endraw%}"
          schoolId: "{%raw%}{{SchoolCode}}{%endraw%}"
          performanceLevel: "{%raw%}{{AwardType if not none else ''}}{%endraw%}"
          whenAssessedGradeLevelDescriptor: "{%raw%}{{Grade_CodeValue}}{%endraw%}"
      - operation: combine_columns
        columns:
          - IrregularityCode1
          - IrregularityCode2
        new_column: eventDescription
        separator: ","
      - operation: join
        sources:
          - $transformations.stage_assessments
        join_type: inner
        left_key: ExamCode
        right_key: AP_Exam_Code
        right_keep_columns:
          - assessmentNamespace
          - assessmentIdentifier
      - operation: add_columns
        columns:
          studentAssessmentIdentifier: "{%raw%}{{ md5(assessmentIdentifier ~ '-' ~ studentUniqueId ~ '-' ~  SchoolYear) }}{%endraw%}" 
          result:  "{%raw%}{{Score}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - studentAssessmentIdentifier
          - assessmentIdentifier
          - studentUniqueId
          - administrationDate
          - School_Year
          - assessmentNamespace
          - whenAssessedGradeLevelDescriptor
          - schoolId
          - descriptorNamespace
          - performanceLevel
        create_columns: 
          result: agg(result,)

destinations:
  assessments:
    source: $transformations.prepare_assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  studentAssessmentEducationOrganizationAssociations:
    source: $transformations.prepare_student_assessments
    template: ./templates/studentAssessmentEducationOrganizationAssociations.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.prepare_student_assessments
    template: ./templates/studentAssessments.jsont
    extension: jsonl
  awards:
    source: $transformations.stage_student_assessment
    template: ./templates/awards.jsont
    extension: jsonl
  
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  assessmentCategoryDescriptors:
    source: $sources.assessmentCategoryDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  assessmentPeriodDescriptors:
    source: $sources.assessmentPeriodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  academicSubjectDescriptors:
    source: $sources.academicSubjectDescriptors
    template: ./templates/academicSubjectDescriptors.jsont
    extension: jsonl
  gradeLevelDescriptors:
    source: $sources.gradeLevelDescriptors
    template: ./templates/gradeLevelDescriptors.jsont
    extension: jsonl