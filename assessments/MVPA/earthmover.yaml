version: 2


config:
  log_level: DEBUG
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_graph: False
  show_stacktrace: true
  parameter_defaults:
    STUDENT_ID_NAME: 'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature
    POSSIBLE_STUDENT_ID_COLUMNS: studentId
    DESCRIPTOR_NAMESPACE: uri://ed-fi.org

sources:
  assessments:
    file: ./seeds/assessments.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1
  gradeLevelDescriptors:
    file: ./seeds/gradeLevelDescriptors.csv
    header_rows: 1

  input:
    # THIS FILE DOES NOT EXIST; IT MUST BE SUPPLIED BY THE USER!
    file: ${INPUT_FILE}
    header_rows: 1
    # See the accompanying bundle_metadata.json for a list of required columns for this file



transformations:
  input:
    source: $sources.input
    operations: []

  clean_results:
    source: $transformations.input
    operations:
      - operation: rename_columns
        columns:
          StudentID: studentId
          SchoolYear: schoolYear
          TestDate: adminDate
          TestID: testId
      - operation: duplicate_columns
        columns: 
          ${STUDENT_ID_NAME}: studentUniqueId
      - operation: combine_columns
        columns:
          - studentId
          - adminDate
          - testId
        new_column: studentAssessmentIdentifier
        separator: '-'
      - operation: modify_columns
        columns:
          studentAssessmentIdentifier: "{%raw%}{{ md5(studentAssessmentIdentifier) }}{%endraw%}"
          schoolYear: "{%raw%}{{ schoolYear[:4] | int +1 }}{%endraw%}"
      - operation: join
        sources:
          - $sources.assessments
        join_type: left
        left_keys:
          - TestName
        right_keys:
          - assessmentTitle

  grade_level_descriptors:
    source: $sources.gradeLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          grade_json: >
            {%raw-%}  
            {
              "gradeLevelDescriptor": "{{gradeLevelDescriptor}}"
            },
            {%-endraw%}
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{grade_json | replace('\n', '')-}}{%endraw%}"
      # group and aggregate
      - operation: group_by
        group_by_columns:
          - assessmentIdentifier
        create_columns: 
          grade_json: agg(grade_json,)
      # remove trailing comma
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{value.rstrip().rstrip(',')}}{%endraw%}"

  assessments:
    source: $transformations.clean_results
    operations:
      - operation: distinct_rows
        column: assessmentTitle
      - operation: keep_columns
        columns:
          - assessmentIdentifier
          - assessmentTitle
          - assessmentFamily
          - namespace
          - assessmentCategoryDescriptor
          - academicSubjectDescriptor
      - operation: join
        sources:
          - $transformations.grade_level_descriptors
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier

destinations:
  assessments:
    source: $transformations.assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.clean_results
    template: ./templates/studentAssessments.jsont
    extension: jsonl