version: 2

config:
  log_level: INFO
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_graph: false
  show_stacktrace: true
  parameter_defaults:
    # You can set these values at the command line or leave the defaults
    OUTPUT_DIR: ./output/
    STUDENT_ID_NAME: 'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature
    POSSIBLE_STUDENT_ID_COLUMNS: Local ID,State ID
    DESCRIPTOR_NAMESPACE: uri://ed-fi.org
    SCHOOL_YEAR: 2025

sources:
  input:
    file: ./data/FastBridge_earlyReading_seasons_pivoted.csv
    header_rows: 1
  assessments:
    file: ./seeds/assessments.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  assessmentPeriodDescriptors:
    file: ./seeds/assessmentPeriodDescriptors.csv
    header_rows: 1
  objectiveAssessments:
    file: ./seeds/objectiveAssessments.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1

transformations:
  input:
    source: $sources.input
    operations: []

  # Clean and prepare input data
  cleaned_input:
    source: $transformations.input
    operations:
      # Duplicate key columns for easier template access
      - operation: duplicate_columns
        columns:
          Final_Date: administrationDate
          ${STUDENT_ID_NAME}: studentUniqueId
      # Convert column names to snake_case for easier template access
      - operation: snake_case_columns
      # Add required columns
      - operation: add_columns
        columns:
          join_key: 1
          # Calculate school year from administration date (July 1 cutoff)
          school_year: "{% raw %}{{ final_date[:4] if (final_date[5:7]|int < 7) else (final_date[:4]|int + 1) }}{% endraw %}"
          assessmentIdentifier: "FastBridge_earlyReading"
          namespace: "uri://fastbridge.org/assessment"
          descriptor_namespace: ${DESCRIPTOR_NAMESPACE}
      # Create unique student assessment ID
      - operation: combine_columns
        columns:
          - final_date
          - state_id
          - season
        new_column: studentAssessmentIdentifier
        separator: '-'
      - operation: modify_columns
        columns:
          studentAssessmentIdentifier: "{%raw%}{{ md5(studentAssessmentIdentifier) }}{%endraw%}"
      # Format the administration date
      - operation: date_format
        column: administration_date
        from_format: "%m/%d/%Y"
        to_format: "%Y-%m-%d"

  # Prepare assessments with proper structure
  assessments:
    source: $sources.assessments
    operations:
      - operation: add_columns
        columns:
          descriptor_namespace: ${DESCRIPTOR_NAMESPACE}

  # Prepare objective assessments
  objective_assessments:
    source: $sources.objectiveAssessments
    operations:
      - operation: add_columns
        columns:
          descriptor_namespace: ${DESCRIPTOR_NAMESPACE}

destinations:
  assessments:
    source: $transformations.assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  objectiveAssessments:
    source: $transformations.objective_assessments
    template: ./templates/objectiveAssessments.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.cleaned_input
    template: ./templates/studentAssessments.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  assessmentPeriodDescriptors:
    source: $sources.assessmentPeriodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
    linearize: True
