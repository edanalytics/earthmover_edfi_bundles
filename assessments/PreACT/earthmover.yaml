version: 2


config:
  log_level: INFO
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ${STATE_FILE}
  show_graph: False
  show_stacktrace: true
  parameter_defaults:
    STUDENT_ID_NAME:  'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature
    POSSIBLE_STUDENT_ID_COLUMNS: Stu_ID_Num
    DESCRIPTOR_NAMESPACE: uri://ed-fi.org


sources:
  assessments:
    file: ./seeds/assessments.csv
    header_rows: 1
  academicSubjectDescriptors:
    file: ./seeds/academicSubjectDescriptors.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1
  objectiveAssessments:
    file: ./seeds/objectiveAssessments.csv
    header_rows: 1
  performanceLevelDescriptors:
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1
  gradeLevelDescriptors:
    file: ./seeds/gradeLevelDescriptors.csv
    header_rows: 1

  input:
    file: ${INPUT_FILE}
    colspec_file: ./fwf_to_csv_xwalks/colspecs.csv   # required
    colspec_headers:
      name: field_name              # required
      start: start_index                 # required if `width` is not provided
      end: end_index                      # required if `width` is not provided
      width: field_length                 # required if `start` or `end` is not provided
    type: fixedwidth               # required if `file` does not end with '.txt'
    header_rows: 0

transformations:
  input:
    source: $sources.input
    operations: []

  clean_results:
    source: $transformations.input
    operations:
      - operation: duplicate_columns
        columns:
         Test_Dte: administrationDate
         Stu_ID_Num: studentUniqueId
          
      - operation: add_columns
        columns:
          schoolYear: "{% raw %}{{ Test_Dte[:4] if (Test_Dte[4:6]|int < 7) else (Test_Dte[:4]|int + 1) }}{% endraw %}"
          assessmentIdentifier: "PreACT"
          namespace: "uri://act.org/Assessment"
          descriptor_namespace: ${DESCRIPTOR_NAMESPACE}
      - operation: combine_columns
        columns:
          - Test_Dte
          - Stu_ID_Num
          
        new_column: studentAssessmentIdentifier
        separator: '-'
      - operation: modify_columns
        columns:
          studentAssessmentIdentifier: "{%raw%}{{ md5(studentAssessmentIdentifier) }}{%endraw%}" 
      - operation: join
        sources:
          - $sources.gradeLevelDescriptors
        join_type: inner
        # change this to match the grade from the file
        left_keys: 
          - Grade_Reported
          - assessmentIdentifier
        right_keys: 
          - originalGrade
          - assessmentIdentifier
      - operation: join
        sources:
          - $sources.performanceLevelDescriptors
        join_type: left
        # change this to match the grade from the file
        left_keys: 
          - C_Readiness
        right_keys: 
          - rawValue
        right_keep_columns:
          - codeValue
      - operation: rename_columns
        columns:
          codeValue: performanceLevelDescriptor
      - operation: date_format
        column: administrationDate
        from_format: "%Y%m%d"
        to_format: "%Y-%m-%d"




  academic_subject_descriptors:
    source: $sources.academicSubjectDescriptors
    operations:
      - operation: add_columns
        columns:
          subject_json: >
              {%raw-%}  
              {
                "academicSubjectDescriptor": "{{academicSubjectDescriptor}}"
              },
              {%-endraw%}
      - operation: modify_columns
        columns:
          subject_json: "{%raw%}{{subject_json | replace('\n', '')-}}{%endraw%}"
        # group and aggregate:
      - operation: group_by
        group_by_columns:
          - assessmentIdentifier
        create_columns: 
          subject_json: agg(subject_json,)
      # there will be a trailing comma, want to get rid of that
      - operation: modify_columns
        columns:
          subject_json: "{%raw%}{{value.rstrip().rstrip(',')}}{%endraw%}"

  # instead of hardcoding descriptors that typically use ed-fi defaults (like subjects/grades)
  # we list those in a csv and aggregate as a transformation so we never hardcode those in the jsont
  grade_level_descriptors:
    source: $sources.gradeLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          grade_json: >
            {%raw-%}  
            {
              "gradeLevelDescriptor": "{{gradeLevelDescriptor}}"
            },
            {%-endraw%}
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{grade_json | replace('\n', '')-}}{%endraw%}"
      # group and aggregate:
      - operation: group_by
        group_by_columns:
          - assessmentIdentifier
        create_columns: 
          grade_json: agg(grade_json,)
      # there will be a trailing comma, want to get rid of that
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{value.rstrip().rstrip(',')}}{%endraw%}"

  assessments:
    source: $sources.assessments
    operations:
      - operation: join
        sources:
          - $transformations.grade_level_descriptors
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: join
        sources:
          - $transformations.academic_subject_descriptors
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: add_columns
        columns:
          descriptor_namespace: ${DESCRIPTOR_NAMESPACE}

  objective_assessments:
    source: $sources.objectiveAssessments
    operations:
      - operation: add_columns
        columns:
          descriptor_namespace: ${DESCRIPTOR_NAMESPACE}

destinations:
  assessments:
    source: $transformations.assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/descriptors.jsont
    extension: jsonl
  objectiveAssessments:
    source: $transformations.objective_assessments
    template: ./templates/objectiveAssessments.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.clean_results
    template: ./templates/studentAssessments.jsont
    extension: jsonl
  studentAssessmentEducationOrganizationAssociations:
    source: $transformations.clean_results
    template: ./templates/studentAssessmentEducationOrganizationAssociations.jsont
    extension: jsonl
