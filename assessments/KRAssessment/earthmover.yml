version: 2
config:
  output_dir: ${OUTPUT_DIR}
  memory_limit: 1GB
  state_file: ./runs.csv
  show_graph: False
  show_stacktrace: true
  parameter_defaults:
    STUDENT_ID_NAME: 'edFi_studentUniqueID' # default to the column added by the apply_xwalk package of student ID xwalking feature edFi_studentUniqueID
    POSSIBLE_STUDENT_ID_COLUMNS: 'PS_StudentID,StudentSUNS'
    DESCRIPTOR_NAMESPACE: uri://ed-fi.org
  
sources:
  input:
    file: ${INPUT_FILE}
    header_rows: 1
  assessments:
    file: ./seeds/assessments.csv
    header_rows: 1
  objectiveAssessments:
    file: ./seeds/objectiveAssessments.csv
    header_rows: 1
  assessmentReportingMethodDescriptors:
    file: ./seeds/assessmentReportingMethodDescriptors.csv
    header_rows: 1

  gradeLevelDescriptors:
    file: ./seeds/gradeLevelDescriptors.csv
    header_rows: 1
  performanceLevelDescriptors:
    
    file: ./seeds/performanceLevelDescriptors.csv
    header_rows: 1


transformations:
  input:
    source: $sources.input
    operations: []
  

  performance_level_descriptors:
    source: $sources.performanceLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"
      - operation: keep_columns
        columns:
          - assessmentIdentifier
          - namespace
          - codeValue
          - minimumScore
          - maximumScore


          
  performance_levels:
    source: $sources.performanceLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"
      - operation: keep_columns
        columns:
          - assessmentIdentifier
          - codeValue
          - namespace
          - minimumScore
          - maximumScore
          - assessmentReportingMethodDescriptor
      - operation: add_columns
        columns:
          performance_json: >
              {%raw-%}  
              {
                "assessmentReportingMethodDescriptor": "{{namespace}}/AssessmentReportingMethodDescriptor#{{assessmentReportingMethodDescriptor}}",
                "performanceLevelDescriptor": "{{ namespace }}/PerformanceLevelDescriptor#{{ codeValue }}",
                "minimumScore": "{{ minimumScore | string }}",
                "maximumScore": "{{ maximumScore | string }}"
              }
              {%-endraw%}  
      - operation: modify_columns
        columns:
          performance_json: "{%raw%}{{performance_json | replace('\n', '')-}}{%endraw%}"    
      - operation: group_by
        group_by_columns:
          - assessmentIdentifier
        create_columns: 
          performance_json: agg(performance_json,,)
        

  performance_level_max_min_score:
    source: $sources.performanceLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"
      - operation: keep_columns
        columns:
          - assessmentIdentifier
          - minimumScore
          - maximumScore
      - operation: group_by
        group_by_columns:
          - assessmentIdentifier
        create_columns: 
          maximumScore: max(maximumScore)
          minimumScore: min(minimumScore)
   
  grade_level_descriptors:
    source: $sources.gradeLevelDescriptors
    operations:
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"
      - operation: add_columns
        columns:
          grade_json: >
              {%raw-%}  
              {
                "gradeLevelDescriptor": "{{namespace}}#{{codeValue}}"
              }
              {%-endraw%}
      - operation: modify_columns
        columns:
          grade_json: "{%raw%}{{grade_json | replace('\n', '')-}}{%endraw%}"
      - operation: group_by
        group_by_columns:
          - assessmentIdentifier
        create_columns: 
          grade_json: agg(grade_json,,)
  


  stage_assessments:
    source: $sources.assessments
    operations:
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"

  prepare_assessments: 
    source: $transformations.stage_assessments
    operations:
      - operation: join
        sources:
          - $transformations.grade_level_descriptors
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: join
        sources:
          - $transformations.performance_levels

        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: join
        sources:
          - $transformations.performance_level_max_min_score
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: add_columns
        columns:         
          descriptorNamespace: ${DESCRIPTOR_NAMESPACE}


  prepare_objective_assessments:
    source: $sources.objectiveAssessments
    operations:
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"
      - operation: join
        sources:
          - $transformations.performance_levels
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: join
        sources:
          - $transformations.performance_level_max_min_score
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier
      - operation: add_columns
        columns:
          descriptorNamespace: ${DESCRIPTOR_NAMESPACE}
    
    
  prepare_student_assessments:
    source: $transformations.input
    operations:
      - operation: duplicate_columns
        columns: 
          ${STUDENT_ID_NAME}: studentUniqueId

      - operation: rename_columns
        columns:
          SchoolCode: schoolId
          DistrictCode: districtId
      - operation: add_columns
        columns:
          assessmentIdentifier: "KRA"
          administrationDate: "{%raw%}{{ DateTaken }}{%endraw%}"
          descriptorNamespace:  ${DESCRIPTOR_NAMESPACE}
      - operation: join
        sources:
          - $transformations.stage_assessments
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier

      - operation: add_columns
        columns:
          studentAssessmentIdentifier: "{% raw %}{{ md5(assessmentIdentifier ~ '-' ~ studentUniqueId ~ '-' ~  DateTaken) }}{% endraw %}"
      - operation: join
        sources:
          - $transformations.performance_level_descriptors
        join_type: inner
        left_key: assessmentIdentifier
        right_key: assessmentIdentifier  
      - operation: add_columns
        columns:
          PerformanceLevel_SFScore: "{%raw%}{% if SFScore >= minimumScore and SFScore <= maximumScore %}{{ codeValue }}{% endif %}{%endraw%}"
          PerformanceLevel_LLScore: "{%raw%}{% if LLScore >= minimumScore and LLScore <= maximumScore %}{{ codeValue }}{% endif %}{%endraw%}"
          PerformanceLevel_MAScore: "{%raw%}{% if MAScore >= minimumScore and MAScore <= maximumScore %}{{ codeValue }}{% endif %}{%endraw%}"
          PerformanceLevel_PDScore: "{%raw%}{% if PDScore >= minimumScore and PDScore <= maximumScore %}{{ codeValue }}{% endif %}{%endraw%}"
      - operation: filter_rows
        query: "(PerformanceLevel_SFScore != 'Unknown' ) or (PerformanceLevel_LLScore != 'Unknown') or (PerformanceLevel_MAScore != 'Unknown') or (PerformanceLevel_PDScore != 'Unknown' )"
        behavior: include
      - operation: rename_columns
        columns:
          namespace_x: namespace
      - operation: group_by
        group_by_columns:
          - studentAssessmentIdentifier
          - assessmentIdentifier
          - studentUniqueId
          - administrationDate
          - SchoolYear
          - namespace
          - whenAssessedGradeLevelDescriptor
          - OverallScore
          - PerformanceLevelDescriptor
          - SFScore
          - LLScore
          - MAScore
          - PDScore
          - schoolId
          - districtId
          - descriptorNamespace
        create_columns: 
          PerformanceLevel_SFScore: agg(PerformanceLevel_SFScore,)
          PerformanceLevel_LLScore: agg(PerformanceLevel_LLScore,)
          PerformanceLevel_MAScore: agg(PerformanceLevel_MAScore,)
          PerformanceLevel_PDScore: agg(PerformanceLevel_PDScore,)
      - operation: filter_rows
        query: "OverallScore != 'NULL'"
        behavior: include
     
destinations:
  assessments:
    source: $transformations.prepare_assessments
    template: ./templates/assessments.jsont
    extension: jsonl
  objectiveAssessments:
    source: $transformations.prepare_objective_assessments
    template: ./templates/objectiveAssessments.jsont
    extension: jsonl
  studentAssessments:
    source: $transformations.prepare_student_assessments
    template: ./templates/studentAssessments.jsont
    extension: jsonl
  studentAssessmentEducationOrganizationAssociations:
    source: $transformations.prepare_student_assessments
    template: ./templates/studentAssessmentEducationOrganizationAssociations.jsont
    extension: jsonl
  assessmentReportingMethodDescriptors:
    source: $sources.assessmentReportingMethodDescriptors
    template: ./templates/assessmentReportingMethodDescriptors.jsont
    extension: jsonl
  performanceLevelDescriptors:
    source: $sources.performanceLevelDescriptors
    template: ./templates/performanceLevelDescriptors.jsont
    extension: jsonl
