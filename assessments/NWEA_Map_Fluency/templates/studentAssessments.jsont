{
    "studentAssessmentIdentifier": "{% if TestID is not none and TestID | length%}{{TestID}}{%else%}{{ md5(generated_test_id) }}{%endif%}",
    "assessmentReference": {
      "assessmentIdentifier": "NWEA-Map-Fluency",
      "namespace": "uri://www.nwea.org/mapFluency"
    },
    "schoolYearTypeReference": {
      "schoolYear": {{ school_year }}
    },
    "studentReference": {
      "studentUniqueId": "{{ studentUniqueId }}"
    },
    "administrationDate": "{{ TestCompletionDate }}",

    "whenAssessedGradeLevelDescriptor": "uri://ed-fi.org/GradeLevelDescriptor#{{grade_level}}",

    "administrationLanguageDescriptor" : "uri://ed-fi.org/LanguageDescriptor#{{language}}",

    "performanceLevels": [],

    "scoreResults": [
      {
        "assessmentReportingMethodDescriptor": "uri://www.nwea.org/mapFluency/AssessmentReportingMethodDescriptor#Result Type",
        "resultDatatypeTypeDescriptor": "uri://ed-fi.org/ResultDatatypeTypeDescriptor#Level",
        "result": "{{ ResultType | truncate(35, True, '', 0) }}"
      },
      {
        "assessmentReportingMethodDescriptor": "uri://www.nwea.org/mapFluency/AssessmentReportingMethodDescriptor#Assigned Test Type",
        "resultDatatypeTypeDescriptor": "uri://ed-fi.org/ResultDatatypeTypeDescriptor#Level",
        "result": "{{ AssignedTestType | truncate(35, True, '', 0) }}"
      }
    ],
    "studentObjectiveAssessments": [
      {% set all_obj_assess = [
                                ({"id_code": "Print Concept", 
                                  "perf_levels": [PrintConceptPerformanceLevel],
                                  "scores": [(PrintConceptCorrect,"Correct","Integer"),
                                             (PrintConceptAttempted,"Attempted","Integer")]
                                }),
                                ({"id_code": "Sentence Reading Fluency", 
                                  "perf_levels": [SentenceReadingFluencyPerformanceLevel],
                                  "scores": [(SentenceReadingFluencyCorrect,"Correct","Integer"),
                                             (SentenceReadingFluencyAttempted,"Attempted","Integer")]
                                }),
                                ({"id_code": "Oral Reading Rate", 
                                  "perf_levels": [OralReadingRatePerf],
                                  "scores": [(OralReadingWCPM,"WCPM","Integer")]
                                }),
                                ({"id_code": "Oral Reading Accuracy", 
                                  "perf_levels": [OralReadingAccuracyPerf],
                                  "scores": [(OralReadingAccuracyScore,"Oral Reading Accuracy Score","Decimal")]
                                }),
                                ({"id_code": "Literal Comprehension", 
                                  "perf_levels": [LiteralComprehensionPerf],
                                  "scores": []
                                }),
                                ({"id_code": "Listening Comprehension", 
                                  "perf_levels": [ListeningComprehensionPerf],
                                  "scores": [(ListeningComprehensionCorrect,"Correct","Integer"),
                                             (ListeningComprehensionAttempted,"Attempted","Integer")]
                                }),
                                ({"id_code": "Picture Vocab", 
                                  "perf_levels": [PictureVocabPerf, PhonologicalAwarenessZPDLevel, PhonologicalAwarenessZPDName],
                                  "scores": [(PictureVocabCorrect,"Correct","Integer"),
                                             (PictureVocabAttempted,"Attempted", "Integer")]
                                }),
                                ({"id_code": "Phonological Awareness", 
                                  "perf_levels": [PhonologicalAwarenessPerf],
                                  "scores": [(PhonologicalAwarenessDomainScore,"Domain Score", "Integer"),
                                             (PhonologicalAwarenessTestPercentile,"Test Percentile", "Integer")]
                                }),
                                ({"id_code": "Phonics Word Recognition", 
                                  "perf_levels": [PhonicsWordRecognitionPerf, PhonicsWordRecognitionZPDLevel, PhonicsWordRecognitionZPDName],
                                  "scores": [(PhonicsWordRecognitionDomainScore,"Domain Score", "Integer"),
                                             (PhonicsWordRecognitionTestPercentile,"Test Percentile", "Integer")]
                                }),
                              ]
      %}

      {% for obj_assess in all_obj_assess %}
      {
        "objectiveAssessmentReference": {
          "assessmentIdentifier": "NWEA-Map-Fluency",
          "identificationCode": "{{ obj_assess["id_code"] }}",
          "namespace": "uri://www.nwea.org/mapFluency"
        },

        "performanceLevels": [
        {% for perf_level in obj_assess["perf_levels"] %}
          {% if perf_level is not none and perf_level | length %}
          {
            "assessmentReportingMethodDescriptor": "uri://www.nwea.org/mapFluency/AssessmentReportingMethodDescriptor#Performance Level",
            "performanceLevelDescriptor": "uri://www.nwea.org/mapFluency/PerformanceLevelDescriptor#{{ perf_level }}",
            "performanceLevelMet": true
          }
          {% if not loop.last %},{% endif %}
          {% endif %}
        {% endfor %}
          ],

        "scoreResults": [
        {% for score in obj_assess["scores"] %}
          {% if score[0] is not none and score[0] | length %}
          {
            "assessmentReportingMethodDescriptor": "uri://www.nwea.org/mapFluency/AssessmentReportingMethodDescriptor#{{ score[1] }}",
            "resultDatatypeTypeDescriptor": "uri://ed-fi.org/ResultDatatypeTypeDescriptor#{{ score[2] }}",
            "result": "{{ score[0] }}"
          }
          {% if not loop.last %},{% endif %}
          {% endif %}
        {% endfor %}
          ]
        }{% if not loop.last %},{% endif %}
      {% endfor %}
    ]
}
